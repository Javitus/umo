#
# This file is part of umo application.
#
# Copyright(c) 2010-2011 JoseMi(jholgui@gmail.com).
# http://umo.googlecode.com
# Twitter: @JoseMiHolguin
#
# This file may be licensed under the terms of of the
# GNU General Public License Version 2 (the ``GPL'').
#
# Software distributed under the License is distributed
# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either
# express or implied. See the GPL for the specific language
# governing rights and limitations.
#
# You should have received a copy of the GPL along with this
# program. If not, go to http://www.gnu.org/licenses/gpl.html
# or write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#


import sys, time
from safebrowsing.prepare_db import Google_Blacklist
from safebrowsing.query_lookup import Lookup

__author__="JoseMi(jholgui@gmail.com)"
__date__ ="$28.06.2011 06:55:16$"

class malwareScan():

    def __init__(self, config):
	if config is not None:
        	self.config = config
	else:
		print "The configuration var isn't set\n"

    def scan_sbg(self):
       	l = Lookup()
	try:
		outfile = open(self.config["p_write"], "a")
		count = 0
	
       		for url in self.config["p_enlaces"]:
        		#url = res.url
        		#url = url.replace("/interstitial?url=","")
        		malware = l.lookup_by_url(url)
        		if malware == 'M':
				count = count + 1
				outfile.write(url + "\n")
   		outfile.close()
		if count > 0:
			print "\n[INFO] Url Malware Owned, look at report: " + self.config["p_write"] + "\n"
		else:
			print "\n[INFO] Malware not found\n"
	except IOError:
		print "Error open file: " + p_write

    def update_sbg(self):
	try:
		g = Google_Blacklist("malware")
		g.fetch_data()
		g = Google_Blacklist("black")
		g.fetch_data()
		print "Google SafeBrowsing - Update finished"
	except:
		print "Errors updating Malware and BlackList Google Safebrowsing"

